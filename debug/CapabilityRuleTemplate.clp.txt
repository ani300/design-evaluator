

    ;;; CLAR_GPS CAPABILITY RULES ;;;

    (defrule MANIFEST::CLAR_GPS-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&CLAR_GPS) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::CLAR_GPS-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::CLAR_GPS-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&CLAR_GPS) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLAR_GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.3.3 GPS radio occultation") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (On-board-calibration High) (Radiometric-accuracy High)  (taken-by CLAR_GPS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id CLAR_GPS0) (Instrument CLAR_GPS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLAR_GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.3.1 Atmospheric humidity -indirect-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (On-board-calibration High) (Radiometric-accuracy High)  (taken-by CLAR_GPS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id CLAR_GPS1) (Instrument CLAR_GPS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLAR_GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.2.1 Atmospheric temperature fields") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (On-board-calibration High) (Radiometric-accuracy High)  (taken-by CLAR_GPS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id CLAR_GPS2) (Instrument CLAR_GPS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLAR_GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  CLAR_GPS0  CLAR_GPS1  CLAR_GPS2  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLAR_GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  CLAR_GPS0  CLAR_GPS1  CLAR_GPS2 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLAR_GPS-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLAR_GPS-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; GACM_SWIR CAPABILITY RULES ;;;

    (defrule MANIFEST::GACM_SWIR-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GACM_SWIR) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::GACM_SWIR-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::GACM_SWIR-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GACM_SWIR) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_SWIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.5 CO") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy High) (Swath Medium-100km) (cloud-cleared no)  (taken-by GACM_SWIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_SWIR0) (Instrument GACM_SWIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_SWIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.2 O3") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy High) (Swath Medium-100km) (cloud-cleared no)  (taken-by GACM_SWIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_SWIR1) (Instrument GACM_SWIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_SWIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.3.2 Water vapor transport - Winds") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy High) (Swath Medium-100km) (cloud-cleared no)  (taken-by GACM_SWIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_SWIR2) (Instrument GACM_SWIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_SWIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.4 CH4") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy High) (Swath Medium-100km) (cloud-cleared no)  (taken-by GACM_SWIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_SWIR3) (Instrument GACM_SWIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_SWIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.1 H2O") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy High) (Swath Medium-100km) (cloud-cleared no)  (taken-by GACM_SWIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_SWIR4) (Instrument GACM_SWIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_SWIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.3 CO2") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy High) (Swath Medium-100km) (cloud-cleared no)  (taken-by GACM_SWIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_SWIR5) (Instrument GACM_SWIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_SWIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  GACM_SWIR0  GACM_SWIR1  GACM_SWIR2  GACM_SWIR3  GACM_SWIR4  GACM_SWIR5  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_SWIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  GACM_SWIR0  GACM_SWIR1  GACM_SWIR2  GACM_SWIR3  GACM_SWIR4  GACM_SWIR5 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_SWIR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_SWIR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; ACE_LID CAPABILITY RULES ;;;

    (defrule MANIFEST::ACE_LID-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&ACE_LID) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::ACE_LID-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::ACE_LID-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&ACE_LID) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.2 aerosol shape, composition, physical and chemical properties") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution High-200m-orless) (Spectral-resolution High-0.1cm-1) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by ACE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_LID0) (Instrument ACE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.3 aerosol scattering properties") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution High-200m-orless) (Spectral-resolution High-0.1cm-1) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by ACE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_LID1) (Instrument ACE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.5 aerosol size and size distribution") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution High-200m-orless) (Spectral-resolution High-0.1cm-1) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by ACE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_LID2) (Instrument ACE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.6.1 cloud height/optical thickness") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution High-200m-orless) (Spectral-resolution High-0.1cm-1) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by ACE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_LID3) (Instrument ACE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.4 aerosol extinction profiles/vertical concentration") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution High-200m-orless) (Spectral-resolution High-0.1cm-1) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by ACE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_LID4) (Instrument ACE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.6 aerosol absorption optical thickness and profiles") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution High-200m-orless) (Spectral-resolution High-0.1cm-1) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by ACE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_LID5) (Instrument ACE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.1 aerosol height/optical depth") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Spectral-resolution High-0.1cm-1) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by ACE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_LID6) (Instrument ACE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.4.3 vegetation height") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Spectral-resolution High-0.1cm-1) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by ACE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_LID7) (Instrument ACE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  ACE_LID0  ACE_LID1  ACE_LID2  ACE_LID3  ACE_LID4  ACE_LID5  ACE_LID6  ACE_LID7  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  ACE_LID0  ACE_LID1  ACE_LID2  ACE_LID3  ACE_LID4  ACE_LID5  ACE_LID6  ACE_LID7 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_LID-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_LID-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; ASC_LID CAPABILITY RULES ;;;

    (defrule MANIFEST::ASC_LID-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&ASC_LID) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::ASC_LID-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::ASC_LID-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&ASC_LID) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.6.1 cloud height/optical thickness") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Single-band) (Accuracy High) (Swath None) (Radiometric-accuracy High) (cloud-cleared no)  (taken-by ASC_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ASC_LID0) (Instrument ASC_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.4 aerosol extinction profiles/vertical concentration") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Single-band) (Accuracy High) (Swath None) (Radiometric-accuracy High) (cloud-cleared no)  (taken-by ASC_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ASC_LID1) (Instrument ASC_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.6 O2") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution Medium-200m-2km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Single-band) (Accuracy High) (Swath None) (Radiometric-accuracy High) (cloud-cleared no)  (taken-by ASC_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ASC_LID2) (Instrument ASC_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.3 CO2") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution Medium-200m-2km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Single-band) (Accuracy High) (Swath None) (Radiometric-accuracy High) (cloud-cleared no) (rms-system-tropoH2O# High) (rms-system-tropo-dry# High)  (taken-by ASC_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ASC_LID3) (Instrument ASC_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.1 aerosol height/optical depth") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Single-band) (Accuracy High) (Swath None) (Radiometric-accuracy High) (cloud-cleared no)  (taken-by ASC_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ASC_LID4) (Instrument ASC_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  ASC_LID0  ASC_LID1  ASC_LID2  ASC_LID3  ASC_LID4  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  ASC_LID0  ASC_LID1  ASC_LID2  ASC_LID3  ASC_LID4 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_LID-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_LID-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; GPS CAPABILITY RULES ;;;

    (defrule MANIFEST::GPS-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GPS) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::GPS-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::GPS-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GPS) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.3.3 GPS radio occultation") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (Radiometric-accuracy High) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Temporal-resolution Medium-1day-3days) (Accuracy High) (On-board-calibration High) (Radiometric-accuracy High)  (taken-by GPS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GPS0) (Instrument GPS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.3.1 Atmospheric humidity -indirect-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Radiometric-accuracy High) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Temporal-resolution Medium-1day-3days) (Accuracy High) (On-board-calibration High) (Radiometric-accuracy High)  (taken-by GPS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GPS1) (Instrument GPS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.3.2 Water vapor transport - Winds") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (Radiometric-accuracy High)  (taken-by GPS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GPS2) (Instrument GPS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.2.1 Atmospheric temperature fields") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (Radiometric-accuracy High) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Temporal-resolution Medium-1day-3days) (Accuracy High) (On-board-calibration High) (Radiometric-accuracy High)  (taken-by GPS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GPS3) (Instrument GPS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  GPS0  GPS1  GPS2  GPS3  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  GPS0  GPS1  GPS2  GPS3 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GPS-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GPS-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; GACM_MWSP CAPABILITY RULES ;;;

    (defrule MANIFEST::GACM_MWSP-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GACM_MWSP) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::GACM_MWSP-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::GACM_MWSP-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GACM_MWSP) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.6.2 cloud ice particle size distribution") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (Swath Medium-100km) (cloud-cleared yes)  (taken-by GACM_MWSP) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_MWSP0) (Instrument GACM_MWSP) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.2 O3") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (Swath Medium-100km) (cloud-cleared yes)  (taken-by GACM_MWSP) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_MWSP1) (Instrument GACM_MWSP) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.5 CO") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (Swath Medium-100km) (cloud-cleared yes)  (taken-by GACM_MWSP) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_MWSP2) (Instrument GACM_MWSP) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.7 NOx-NO, NO2-, N2O5, HNO3") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (Swath Medium-100km) (cloud-cleared yes)  (taken-by GACM_MWSP) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_MWSP3) (Instrument GACM_MWSP) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.8 CH2O and non-CH4 VOC") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (Swath Medium-100km) (cloud-cleared yes)  (taken-by GACM_MWSP) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_MWSP4) (Instrument GACM_MWSP) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.9 CFCs/HFCs") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (Swath Medium-100km) (cloud-cleared yes)  (taken-by GACM_MWSP) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_MWSP5) (Instrument GACM_MWSP) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.6.3 Cloud particle phase - ice/water transition") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (Swath Medium-100km) (cloud-cleared yes)  (taken-by GACM_MWSP) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_MWSP6) (Instrument GACM_MWSP) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.2.1 Atmospheric temperature fields") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (Swath Medium-100km) (cloud-cleared yes)  (taken-by GACM_MWSP) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_MWSP7) (Instrument GACM_MWSP) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.1 H2O") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (Swath Medium-100km) (cloud-cleared yes)  (taken-by GACM_MWSP) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_MWSP8) (Instrument GACM_MWSP) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.12 Vulcanic SO2, OCS and other vulcanic aerosols") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (Swath Medium-100km) (cloud-cleared yes)  (taken-by GACM_MWSP) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_MWSP9) (Instrument GACM_MWSP) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.10 H2O2, OH, HO2 and isotopes -HDO, H218O-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (Swath Medium-100km) (cloud-cleared yes)  (taken-by GACM_MWSP) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_MWSP10) (Instrument GACM_MWSP) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.14 ClO, BrO, halogen compounds") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (Swath Medium-100km) (cloud-cleared yes)  (taken-by GACM_MWSP) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_MWSP11) (Instrument GACM_MWSP) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.11 SO2") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (Swath Medium-100km) (cloud-cleared yes)  (taken-by GACM_MWSP) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_MWSP12) (Instrument GACM_MWSP) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.15 Upper-troposphere/stratosphere - Polar Stratospheric Clouds") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (Swath Medium-100km) (cloud-cleared yes)  (taken-by GACM_MWSP) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_MWSP13) (Instrument GACM_MWSP) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  GACM_MWSP0  GACM_MWSP1  GACM_MWSP2  GACM_MWSP3  GACM_MWSP4  GACM_MWSP5  GACM_MWSP6  GACM_MWSP7  GACM_MWSP8  GACM_MWSP9  GACM_MWSP10  GACM_MWSP11  GACM_MWSP12  GACM_MWSP13  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  GACM_MWSP0  GACM_MWSP1  GACM_MWSP2  GACM_MWSP3  GACM_MWSP4  GACM_MWSP5  GACM_MWSP6  GACM_MWSP7  GACM_MWSP8  GACM_MWSP9  GACM_MWSP10  GACM_MWSP11  GACM_MWSP12  GACM_MWSP13 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_MWSP-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; SWOT_GPS CAPABILITY RULES ;;;

    (defrule MANIFEST::SWOT_GPS-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&SWOT_GPS) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::SWOT_GPS-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::SWOT_GPS-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&SWOT_GPS) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.3.1 Atmospheric humidity -indirect-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by SWOT_GPS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_GPS0) (Instrument SWOT_GPS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "A9.Precise Orbit Determination") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by SWOT_GPS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_GPS1) (Instrument SWOT_GPS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "A8.Total electron content in ionosphere") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Medium)  (taken-by SWOT_GPS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_GPS2) (Instrument SWOT_GPS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "5.1.3 Space weather -solar X-ray/EUV, energetic particles, ionosphere-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by SWOT_GPS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_GPS3) (Instrument SWOT_GPS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.2.1 Atmospheric temperature fields") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by SWOT_GPS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_GPS4) (Instrument SWOT_GPS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  SWOT_GPS0  SWOT_GPS1  SWOT_GPS2  SWOT_GPS3  SWOT_GPS4  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_GPS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  SWOT_GPS0  SWOT_GPS1  SWOT_GPS2  SWOT_GPS3  SWOT_GPS4 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_GPS-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_GPS-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; 3D_NCLID CAPABILITY RULES ;;;

    (defrule MANIFEST::3D_NCLID-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&3D_NCLID) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::3D_NCLID-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::3D_NCLID-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&3D_NCLID) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::3D_NCLID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.4.1 atmospheric wind speed") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Radiometric-accuracy High)  (taken-by 3D_NCLID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id 3D_NCLID0) (Instrument 3D_NCLID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::3D_NCLID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.2 O3") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Radiometric-accuracy High)  (taken-by 3D_NCLID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id 3D_NCLID1) (Instrument 3D_NCLID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::3D_NCLID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.3.2 Water vapor transport - Winds") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Radiometric-accuracy High)  (taken-by 3D_NCLID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id 3D_NCLID2) (Instrument 3D_NCLID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::3D_NCLID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.4.2 atmospheric wind direction") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Radiometric-accuracy High)  (taken-by 3D_NCLID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id 3D_NCLID3) (Instrument 3D_NCLID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::3D_NCLID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  3D_NCLID0  3D_NCLID1  3D_NCLID2  3D_NCLID3  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::3D_NCLID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  3D_NCLID0  3D_NCLID1  3D_NCLID2  3D_NCLID3 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::3D_NCLID-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::3D_NCLID-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; SWOT_KaRIN CAPABILITY RULES ;;;

    (defrule MANIFEST::SWOT_KaRIN-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&SWOT_KaRIN) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::SWOT_KaRIN-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::SWOT_KaRIN-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&SWOT_KaRIN) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_KaRIN-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.1 snow-water equivalence") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low) (rms-system-tropoH2O# 10.0) (rms-system-instrument# 1.0) (rms-system-POD# 10.0) (rms-system-ionosphere# 10.0) (rms-system-model# 1.0) (rms-variable-measurement# 4.0) (rms-system-tides# 10.0) (rms-system-tropo-dry# 3.0) (rms-total# 100.0)  (taken-by SWOT_KaRIN) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_KaRIN0) (Instrument SWOT_KaRIN) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_KaRIN-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.2 landcover status") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low) (rms-system-tropoH2O# 10.0) (rms-system-instrument# 1.0) (rms-system-POD# 10.0) (rms-system-ionosphere# 10.0) (rms-system-model# 1.0) (rms-variable-measurement# 4.0) (rms-system-tides# 10.0) (rms-system-tropo-dry# 3.0) (rms-total# 100.0)  (taken-by SWOT_KaRIN) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_KaRIN1) (Instrument SWOT_KaRIN) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_KaRIN-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.2 snow depth") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low) (rms-system-tropoH2O# 10.0) (rms-system-instrument# 1.0) (rms-system-POD# 10.0) (rms-system-ionosphere# 10.0) (rms-system-model# 1.0) (rms-variable-measurement# 4.0) (rms-system-tides# 10.0) (rms-system-tropo-dry# 3.0) (rms-total# 100.0)  (taken-by SWOT_KaRIN) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_KaRIN2) (Instrument SWOT_KaRIN) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_KaRIN-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.7.2 flood monitoring") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low) (rms-system-tropoH2O# 10.0) (rms-system-instrument# 1.0) (rms-system-POD# 10.0) (rms-system-ionosphere# 10.0) (rms-system-model# 1.0) (rms-variable-measurement# 4.0) (rms-system-tides# 10.0) (rms-system-tropo-dry# 3.0) (rms-total# 100.0)  (taken-by SWOT_KaRIN) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_KaRIN3) (Instrument SWOT_KaRIN) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_KaRIN-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.2.2 seafloor topography") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High) (rms-system-tropoH2O# 10.0) (rms-system-instrument# 1.0) (rms-system-POD# 10.0) (rms-system-ionosphere# 10.0) (rms-system-model# 1.0) (rms-variable-measurement# 4.0) (rms-system-tides# 10.0) (rms-system-tropo-dry# 3.0) (rms-total# 100.0)  (taken-by SWOT_KaRIN) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_KaRIN4) (Instrument SWOT_KaRIN) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_KaRIN-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.7.3 groundwater storage") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low) (rms-system-tropoH2O# 10.0) (rms-system-instrument# 1.0) (rms-system-POD# 10.0) (rms-system-ionosphere# 10.0) (rms-system-model# 1.0) (rms-variable-measurement# 4.0) (rms-system-tides# 10.0) (rms-system-tropo-dry# 3.0) (rms-total# 100.0)  (taken-by SWOT_KaRIN) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_KaRIN5) (Instrument SWOT_KaRIN) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_KaRIN-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.4.1 vegetation type and structure") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low) (rms-system-tropoH2O# 10.0) (rms-system-instrument# 1.0) (rms-system-POD# 10.0) (rms-system-ionosphere# 10.0) (rms-system-model# 1.0) (rms-variable-measurement# 4.0) (rms-system-tides# 10.0) (rms-system-tropo-dry# 3.0) (rms-total# 100.0)  (taken-by SWOT_KaRIN) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_KaRIN6) (Instrument SWOT_KaRIN) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_KaRIN-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.3 snow wetness") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low) (rms-system-tropoH2O# 10.0) (rms-system-instrument# 1.0) (rms-system-POD# 10.0) (rms-system-ionosphere# 10.0) (rms-system-model# 1.0) (rms-variable-measurement# 4.0) (rms-system-tides# 10.0) (rms-system-tropo-dry# 3.0) (rms-total# 100.0)  (taken-by SWOT_KaRIN) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_KaRIN7) (Instrument SWOT_KaRIN) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_KaRIN-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.7.1 river and lake elevation") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High) (rms-system-tropoH2O# 10.0) (rms-system-instrument# 1.0) (rms-system-POD# 10.0) (rms-system-ionosphere# 10.0) (rms-system-model# 1.0) (rms-variable-measurement# 4.0) (rms-system-tides# 10.0) (rms-system-tropo-dry# 3.0) (rms-total# 100.0)  (taken-by SWOT_KaRIN) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_KaRIN8) (Instrument SWOT_KaRIN) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_KaRIN-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.2.1 Sea level height") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High) (rms-system-tropoH2O# 10.0) (rms-system-instrument# 1.0) (rms-system-POD# 10.0) (rms-system-ionosphere# 10.0) (rms-system-model# 1.0) (rms-variable-measurement# 4.0) (rms-system-tides# 10.0) (rms-system-tropo-dry# 3.0) (rms-total# 100.0)  (taken-by SWOT_KaRIN) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_KaRIN9) (Instrument SWOT_KaRIN) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_KaRIN-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.1 land use") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low) (rms-system-tropoH2O# 10.0) (rms-system-instrument# 1.0) (rms-system-POD# 10.0) (rms-system-ionosphere# 10.0) (rms-system-model# 1.0) (rms-variable-measurement# 4.0) (rms-system-tides# 10.0) (rms-system-tropo-dry# 3.0) (rms-total# 100.0)  (taken-by SWOT_KaRIN) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_KaRIN10) (Instrument SWOT_KaRIN) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_KaRIN-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.4 snow cover") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low) (rms-system-tropoH2O# 10.0) (rms-system-instrument# 1.0) (rms-system-POD# 10.0) (rms-system-ionosphere# 10.0) (rms-system-model# 1.0) (rms-variable-measurement# 4.0) (rms-system-tides# 10.0) (rms-system-tropo-dry# 3.0) (rms-total# 100.0)  (taken-by SWOT_KaRIN) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_KaRIN11) (Instrument SWOT_KaRIN) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_KaRIN-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.2.2 Hi-res topography") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low) (rms-system-tropoH2O# 10.0) (rms-system-instrument# 1.0) (rms-system-POD# 10.0) (rms-system-ionosphere# 10.0) (rms-system-model# 1.0) (rms-variable-measurement# 4.0) (rms-system-tides# 10.0) (rms-system-tropo-dry# 3.0) (rms-total# 100.0)  (taken-by SWOT_KaRIN) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_KaRIN12) (Instrument SWOT_KaRIN) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_KaRIN-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  SWOT_KaRIN0  SWOT_KaRIN1  SWOT_KaRIN2  SWOT_KaRIN3  SWOT_KaRIN4  SWOT_KaRIN5  SWOT_KaRIN6  SWOT_KaRIN7  SWOT_KaRIN8  SWOT_KaRIN9  SWOT_KaRIN10  SWOT_KaRIN11  SWOT_KaRIN12  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_KaRIN-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  SWOT_KaRIN0  SWOT_KaRIN1  SWOT_KaRIN2  SWOT_KaRIN3  SWOT_KaRIN4  SWOT_KaRIN5  SWOT_KaRIN6  SWOT_KaRIN7  SWOT_KaRIN8  SWOT_KaRIN9  SWOT_KaRIN10  SWOT_KaRIN11  SWOT_KaRIN12 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_KaRIN-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_KaRIN-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; DESD_LID CAPABILITY RULES ;;;

    (defrule MANIFEST::DESD_LID-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&DESD_LID) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::DESD_LID-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::DESD_LID-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&DESD_LID) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "2.4.1 vegetation type and structure") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by DESD_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_LID0) (Instrument DESD_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.6.1 cloud height/optical thickness") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by DESD_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_LID1) (Instrument DESD_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.4.4 canopy density") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by DESD_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_LID2) (Instrument DESD_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.4 aerosol extinction profiles/vertical concentration") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by DESD_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_LID3) (Instrument DESD_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.5.3 Cloud amount/distribution -horizontal and vertical-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by DESD_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_LID4) (Instrument DESD_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.1.3 glacier mass balance") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by DESD_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_LID5) (Instrument DESD_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.2.2 Hi-res topography") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by DESD_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_LID6) (Instrument DESD_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.1 aerosol height/optical depth") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by DESD_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_LID7) (Instrument DESD_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.4.3 vegetation height") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by DESD_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_LID8) (Instrument DESD_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.1.5 Ice Sheet topography") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Swath None) (Radiometric-accuracy High)  (taken-by DESD_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_LID9) (Instrument DESD_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  DESD_LID0  DESD_LID1  DESD_LID2  DESD_LID3  DESD_LID4  DESD_LID5  DESD_LID6  DESD_LID7  DESD_LID8  DESD_LID9  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  DESD_LID0  DESD_LID1  DESD_LID2  DESD_LID3  DESD_LID4  DESD_LID5  DESD_LID6  DESD_LID7  DESD_LID8  DESD_LID9 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_LID-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_LID-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; ACE_ORCA CAPABILITY RULES ;;;

    (defrule MANIFEST::ACE_ORCA-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&ACE_ORCA) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::ACE_ORCA-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::ACE_ORCA-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&ACE_ORCA) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_ORCA-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "3.1.1 Ocean color - 410-680nm -Chlorophyll absorption and fluorescence, pigments, phytoplankton, CDOM-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by ACE_ORCA) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_ORCA0) (Instrument ACE_ORCA) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_ORCA-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.1.2 Extended ocean color - UV -enhanced DOC, CDOM-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by ACE_ORCA) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_ORCA1) (Instrument ACE_ORCA) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_ORCA-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.1.3 Extended ocean color - NIR -atmospheric correction-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by ACE_ORCA) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_ORCA2) (Instrument ACE_ORCA) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_ORCA-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.6 aerosol absorption optical thickness and profiles") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution High-200m-orless) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by ACE_ORCA) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_ORCA3) (Instrument ACE_ORCA) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_ORCA-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.1 aerosol height/optical depth") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by ACE_ORCA) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_ORCA4) (Instrument ACE_ORCA) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_ORCA-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  ACE_ORCA0  ACE_ORCA1  ACE_ORCA2  ACE_ORCA3  ACE_ORCA4  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_ORCA-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  ACE_ORCA0  ACE_ORCA1  ACE_ORCA2  ACE_ORCA3  ACE_ORCA4 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_ORCA-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_ORCA-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; ACE_POL CAPABILITY RULES ;;;

    (defrule MANIFEST::ACE_POL-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&ACE_POL) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::ACE_POL-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::ACE_POL-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&ACE_POL) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_POL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.6.2 cloud ice particle size distribution") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy Medium)  (taken-by ACE_POL) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_POL0) (Instrument ACE_POL) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_POL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.2 aerosol shape, composition, physical and chemical properties") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by ACE_POL) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_POL1) (Instrument ACE_POL) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_POL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.3 aerosol scattering properties") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by ACE_POL) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_POL2) (Instrument ACE_POL) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_POL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.5 aerosol size and size distribution") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by ACE_POL) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_POL3) (Instrument ACE_POL) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_POL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.6.1 cloud height/optical thickness") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy Medium) (Swath Medium-100km) (Radiometric-accuracy Medium)  (taken-by ACE_POL) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_POL4) (Instrument ACE_POL) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_POL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.6 O2") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by ACE_POL) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_POL5) (Instrument ACE_POL) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_POL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.13 Black carbon and other polluting aerosols") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by ACE_POL) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_POL6) (Instrument ACE_POL) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_POL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.7.2 Cloud droplet size") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy Medium) (Swath Medium-100km) (Radiometric-accuracy Medium)  (taken-by ACE_POL) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_POL7) (Instrument ACE_POL) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_POL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.6 aerosol absorption optical thickness and profiles") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by ACE_POL) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_POL8) (Instrument ACE_POL) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_POL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.6.3 Cloud particle phase - ice/water transition") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy Medium) (Swath Medium-100km) (Radiometric-accuracy Medium)  (taken-by ACE_POL) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_POL9) (Instrument ACE_POL) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_POL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.1 H2O") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy Medium) (Swath Medium-100km) (Radiometric-accuracy Medium)  (taken-by ACE_POL) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_POL10) (Instrument ACE_POL) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_POL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.1 aerosol height/optical depth") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy Medium) (Swath Medium-100km) (Radiometric-accuracy Medium)  (taken-by ACE_POL) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_POL11) (Instrument ACE_POL) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_POL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  ACE_POL0  ACE_POL1  ACE_POL2  ACE_POL3  ACE_POL4  ACE_POL5  ACE_POL6  ACE_POL7  ACE_POL8  ACE_POL9  ACE_POL10  ACE_POL11  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_POL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  ACE_POL0  ACE_POL1  ACE_POL2  ACE_POL3  ACE_POL4  ACE_POL5  ACE_POL6  ACE_POL7  ACE_POL8  ACE_POL9  ACE_POL10  ACE_POL11 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_POL-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_POL-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; 3D_CLID CAPABILITY RULES ;;;

    (defrule MANIFEST::3D_CLID-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&3D_CLID) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::3D_CLID-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::3D_CLID-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&3D_CLID) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::3D_CLID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.4.1 atmospheric wind speed") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Radiometric-accuracy High)  (taken-by 3D_CLID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id 3D_CLID0) (Instrument 3D_CLID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::3D_CLID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.3.2 Water vapor transport - Winds") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Radiometric-accuracy High) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Radiometric-accuracy High)  (taken-by 3D_CLID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id 3D_CLID1) (Instrument 3D_CLID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::3D_CLID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.4.2 atmospheric wind direction") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Radiometric-accuracy High)  (taken-by 3D_CLID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id 3D_CLID2) (Instrument 3D_CLID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::3D_CLID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.1 H2O") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Radiometric-accuracy High)  (taken-by 3D_CLID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id 3D_CLID3) (Instrument 3D_CLID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::3D_CLID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.3 CO2") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Radiometric-accuracy High)  (taken-by 3D_CLID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id 3D_CLID4) (Instrument 3D_CLID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::3D_CLID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  3D_CLID0  3D_CLID1  3D_CLID2  3D_CLID3  3D_CLID4  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::3D_CLID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  3D_CLID0  3D_CLID1  3D_CLID2  3D_CLID3  3D_CLID4 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::3D_CLID-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::3D_CLID-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; SCLP_SAR CAPABILITY RULES ;;;

    (defrule MANIFEST::SCLP_SAR-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&SCLP_SAR) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::SCLP_SAR-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::SCLP_SAR-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&SCLP_SAR) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.4 hydrocarbon reservoir monitoring") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by SCLP_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_SAR0) (Instrument SCLP_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.1 snow-water equivalence") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by SCLP_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_SAR1) (Instrument SCLP_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.2 landcover status") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by SCLP_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_SAR2) (Instrument SCLP_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.2 snow depth") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by SCLP_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_SAR3) (Instrument SCLP_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.6.1 Ocean wave height and spectrum") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by SCLP_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_SAR4) (Instrument SCLP_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.7.2 flood monitoring") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by SCLP_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_SAR5) (Instrument SCLP_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.4.1 Ocean surface wind speed") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by SCLP_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_SAR6) (Instrument SCLP_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.4.1 vegetation type and structure") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by SCLP_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_SAR7) (Instrument SCLP_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.3 snow wetness") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by SCLP_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_SAR8) (Instrument SCLP_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.7.1 river and lake elevation") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by SCLP_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_SAR9) (Instrument SCLP_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.3.2 soil moisture") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by SCLP_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_SAR10) (Instrument SCLP_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.1 land use") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by SCLP_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_SAR11) (Instrument SCLP_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.4 snow cover") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by SCLP_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_SAR12) (Instrument SCLP_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.4.2 Ocean surface wind direction") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by SCLP_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_SAR13) (Instrument SCLP_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.2.2 Hi-res topography") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by SCLP_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_SAR14) (Instrument SCLP_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.3 disaster monitoring") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by SCLP_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_SAR15) (Instrument SCLP_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  SCLP_SAR0  SCLP_SAR1  SCLP_SAR2  SCLP_SAR3  SCLP_SAR4  SCLP_SAR5  SCLP_SAR6  SCLP_SAR7  SCLP_SAR8  SCLP_SAR9  SCLP_SAR10  SCLP_SAR11  SCLP_SAR12  SCLP_SAR13  SCLP_SAR14  SCLP_SAR15  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  SCLP_SAR0  SCLP_SAR1  SCLP_SAR2  SCLP_SAR3  SCLP_SAR4  SCLP_SAR5  SCLP_SAR6  SCLP_SAR7  SCLP_SAR8  SCLP_SAR9  SCLP_SAR10  SCLP_SAR11  SCLP_SAR12  SCLP_SAR13  SCLP_SAR14  SCLP_SAR15 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_SAR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; GRAC_RANG CAPABILITY RULES ;;;

    (defrule MANIFEST::GRAC_RANG-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GRAC_RANG) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::GRAC_RANG-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::GRAC_RANG-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GRAC_RANG) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GRAC_RANG-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "2.7.3 groundwater storage") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by GRAC_RANG) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GRAC_RANG0) (Instrument GRAC_RANG) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GRAC_RANG-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.2.6 Ocean mass distribution") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by GRAC_RANG) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GRAC_RANG1) (Instrument GRAC_RANG) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GRAC_RANG-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.1.3 glacier mass balance") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by GRAC_RANG) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GRAC_RANG2) (Instrument GRAC_RANG) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GRAC_RANG-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "5.1.1 Geoid and gravity field variations") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by GRAC_RANG) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GRAC_RANG3) (Instrument GRAC_RANG) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GRAC_RANG-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.2.2 seafloor topography") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by GRAC_RANG) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GRAC_RANG4) (Instrument GRAC_RANG) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GRAC_RANG-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  GRAC_RANG0  GRAC_RANG1  GRAC_RANG2  GRAC_RANG3  GRAC_RANG4  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GRAC_RANG-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  GRAC_RANG0  GRAC_RANG1  GRAC_RANG2  GRAC_RANG3  GRAC_RANG4 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GRAC_RANG-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GRAC_RANG-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; XOV_SAR CAPABILITY RULES ;;;

    (defrule MANIFEST::XOV_SAR-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&XOV_SAR) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::XOV_SAR-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::XOV_SAR-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&XOV_SAR) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "3.4.1 Ocean surface wind speed") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Wide-1000km) (rms-system-tropoH2O# High) (sensitivity-in-high-winds Low) (sensitivity-in-rain Low)  (taken-by XOV_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id XOV_SAR0) (Instrument XOV_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.3.2 Sea ice cover") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy Medium) (Swath Wide-1000km) (rms-system-tropoH2O# High) (sensitivity-in-high-winds Low) (sensitivity-in-rain Low)  (taken-by XOV_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id XOV_SAR1) (Instrument XOV_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.6.1 Ocean wave height and spectrum") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Wide-1000km) (rms-system-tropoH2O# High) (sensitivity-in-high-winds Low) (sensitivity-in-rain Low)  (taken-by XOV_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id XOV_SAR2) (Instrument XOV_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.4 snow cover") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy Low) (Swath Wide-1000km) (rms-system-tropoH2O# High) (sensitivity-in-high-winds Low) (sensitivity-in-rain Low)  (taken-by XOV_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id XOV_SAR3) (Instrument XOV_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.4.2 Ocean surface wind direction") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Wide-1000km) (rms-system-tropoH2O# High) (sensitivity-in-high-winds Low) (sensitivity-in-rain Low)  (taken-by XOV_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id XOV_SAR4) (Instrument XOV_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  XOV_SAR0  XOV_SAR1  XOV_SAR2  XOV_SAR3  XOV_SAR4  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  XOV_SAR0  XOV_SAR1  XOV_SAR2  XOV_SAR3  XOV_SAR4 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_SAR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_SAR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; CLAR_VNIR CAPABILITY RULES ;;;

    (defrule MANIFEST::CLAR_VNIR-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&CLAR_VNIR) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::CLAR_VNIR-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::CLAR_VNIR-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&CLAR_VNIR) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLAR_VNIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.9.3 Spectrally resolved SW radiance -0.3-2um-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy High) (On-board-calibration High) (Radiometric-accuracy High) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy High) (On-board-calibration High) (Radiometric-accuracy High)  (taken-by CLAR_VNIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id CLAR_VNIR0) (Instrument CLAR_VNIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLAR_VNIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  CLAR_VNIR0  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLAR_VNIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  CLAR_VNIR0 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLAR_VNIR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLAR_VNIR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; GACM_VIS CAPABILITY RULES ;;;

    (defrule MANIFEST::GACM_VIS-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GACM_VIS) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::GACM_VIS-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::GACM_VIS-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GACM_VIS) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.2 O3") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (cloud-cleared yes)  (taken-by GACM_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_VIS0) (Instrument GACM_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.6.1 cloud height/optical thickness") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (cloud-cleared yes)  (taken-by GACM_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_VIS1) (Instrument GACM_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.7 NOx-NO, NO2-, N2O5, HNO3") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (cloud-cleared yes)  (taken-by GACM_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_VIS2) (Instrument GACM_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.8 CH2O and non-CH4 VOC") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (cloud-cleared yes)  (taken-by GACM_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_VIS3) (Instrument GACM_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.1 aerosol height/optical depth") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (cloud-cleared yes)  (taken-by GACM_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_VIS4) (Instrument GACM_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.5.4 cloud mask") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy High) (cloud-cleared yes)  (taken-by GACM_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_VIS5) (Instrument GACM_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.12 Vulcanic SO2, OCS and other vulcanic aerosols") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (cloud-cleared yes)  (taken-by GACM_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_VIS6) (Instrument GACM_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.9.4 Spectrally resolved UV radiance -0.15-0.3um-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (cloud-cleared yes)  (taken-by GACM_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_VIS7) (Instrument GACM_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.5 aerosol size and size distribution") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (cloud-cleared yes)  (taken-by GACM_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_VIS8) (Instrument GACM_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.14 ClO, BrO, halogen compounds") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (cloud-cleared yes)  (taken-by GACM_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_VIS9) (Instrument GACM_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.11 SO2") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (cloud-cleared yes)  (taken-by GACM_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_VIS10) (Instrument GACM_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.1.1 Ocean color - 410-680nm -Chlorophyll absorption and fluorescence, pigments, phytoplankton, CDOM-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy High) (cloud-cleared yes)  (taken-by GACM_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_VIS11) (Instrument GACM_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.1.2 Extended ocean color - UV -enhanced DOC, CDOM-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy High) (cloud-cleared yes)  (taken-by GACM_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_VIS12) (Instrument GACM_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.13 Black carbon and other polluting aerosols") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Accuracy High) (cloud-cleared yes)  (taken-by GACM_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_VIS13) (Instrument GACM_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  GACM_VIS0  GACM_VIS1  GACM_VIS2  GACM_VIS3  GACM_VIS4  GACM_VIS5  GACM_VIS6  GACM_VIS7  GACM_VIS8  GACM_VIS9  GACM_VIS10  GACM_VIS11  GACM_VIS12  GACM_VIS13  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  GACM_VIS0  GACM_VIS1  GACM_VIS2  GACM_VIS3  GACM_VIS4  GACM_VIS5  GACM_VIS6  GACM_VIS7  GACM_VIS8  GACM_VIS9  GACM_VIS10  GACM_VIS11  GACM_VIS12  GACM_VIS13 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_VIS-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; GACM_DIAL CAPABILITY RULES ;;;

    (defrule MANIFEST::GACM_DIAL-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GACM_DIAL) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::GACM_DIAL-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::GACM_DIAL-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GACM_DIAL) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_DIAL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.2 O3") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (cloud-cleared no)  (taken-by GACM_DIAL) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_DIAL0) (Instrument GACM_DIAL) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_DIAL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.4 aerosol extinction profiles/vertical concentration") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (cloud-cleared no)  (taken-by GACM_DIAL) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_DIAL1) (Instrument GACM_DIAL) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_DIAL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.13 Black carbon and other polluting aerosols") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (cloud-cleared no)  (taken-by GACM_DIAL) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_DIAL2) (Instrument GACM_DIAL) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_DIAL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.6 aerosol absorption optical thickness and profiles") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (cloud-cleared no)  (taken-by GACM_DIAL) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_DIAL3) (Instrument GACM_DIAL) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_DIAL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.1 aerosol height/optical depth") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (cloud-cleared no)  (taken-by GACM_DIAL) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GACM_DIAL4) (Instrument GACM_DIAL) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_DIAL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  GACM_DIAL0  GACM_DIAL1  GACM_DIAL2  GACM_DIAL3  GACM_DIAL4  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_DIAL-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  GACM_DIAL0  GACM_DIAL1  GACM_DIAL2  GACM_DIAL3  GACM_DIAL4 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_DIAL-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GACM_DIAL-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; SWOT_RAD CAPABILITY RULES ;;;

    (defrule MANIFEST::SWOT_RAD-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&SWOT_RAD) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::SWOT_RAD-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::SWOT_RAD-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&SWOT_RAD) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_RAD-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "3.2.1 Sea level height") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Penetration Medium-other-MW) (Polarimetry yes) (ThreeD No-3D) (Radiometric-accuracy High) (rms-system-tropoH2O# 10.0) (rms-system-instrument# 1.0) (rms-system-POD# 10.0) (rms-system-ionosphere# 10.0) (rms-system-model# 1.0) (rms-variable-measurement# 4.0) (rms-system-tides# 10.0) (rms-system-tropo-dry# 3.0) (rms-total# 100.0)  (taken-by SWOT_RAD) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_RAD0) (Instrument SWOT_RAD) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_RAD-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "A8.Total electron content in ionosphere") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Penetration Medium-other-MW) (Polarimetry yes) (ThreeD No-3D) (Radiometric-accuracy High) (rms-system-tropoH2O# 10.0) (rms-system-instrument# 1.0) (rms-system-POD# 10.0) (rms-system-ionosphere# 10.0) (rms-system-model# 1.0) (rms-variable-measurement# 4.0) (rms-system-tides# 10.0) (rms-system-tropo-dry# 3.0) (rms-total# 100.0)  (taken-by SWOT_RAD) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_RAD1) (Instrument SWOT_RAD) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_RAD-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.2.2 seafloor topography") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Penetration Medium-other-MW) (Polarimetry yes) (ThreeD No-3D) (Radiometric-accuracy High) (rms-system-tropoH2O# 10.0) (rms-system-instrument# 1.0) (rms-system-POD# 10.0) (rms-system-ionosphere# 10.0) (rms-system-model# 1.0) (rms-variable-measurement# 4.0) (rms-system-tides# 10.0) (rms-system-tropo-dry# 3.0) (rms-total# 100.0)  (taken-by SWOT_RAD) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_RAD2) (Instrument SWOT_RAD) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_RAD-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  SWOT_RAD0  SWOT_RAD1  SWOT_RAD2  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_RAD-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  SWOT_RAD0  SWOT_RAD1  SWOT_RAD2 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_RAD-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_RAD-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; ICE_LID CAPABILITY RULES ;;;

    (defrule MANIFEST::ICE_LID-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&ICE_LID) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::ICE_LID-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::ICE_LID-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&ICE_LID) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ICE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.5.2 Cloud type") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Multiband-2-9-channels) (Accuracy Medium) (Swath None)  (taken-by ICE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ICE_LID0) (Instrument ICE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ICE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.1.2 Glacier surface elevation") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Multiband-2-9-channels) (Accuracy High) (Swath None)  (taken-by ICE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ICE_LID1) (Instrument ICE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ICE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.3.1 Sea ice thickness") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Multiband-2-9-channels) (Accuracy High) (Swath None)  (taken-by ICE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ICE_LID2) (Instrument ICE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ICE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.6.1 cloud height/optical thickness") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Multiband-2-9-channels) (Accuracy Medium) (Swath None)  (taken-by ICE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ICE_LID3) (Instrument ICE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ICE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.4 aerosol extinction profiles/vertical concentration") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Multiband-2-9-channels) (Accuracy Medium) (Swath None)  (taken-by ICE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ICE_LID4) (Instrument ICE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ICE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.1.1 ice sheet volume") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Multiband-2-9-channels) (Accuracy High) (Swath None)  (taken-by ICE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ICE_LID5) (Instrument ICE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ICE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.6 aerosol absorption optical thickness and profiles") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Vertical-Spatial-Resolution High-200m-orless) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Multiband-2-9-channels) (Accuracy Medium) (Swath None)  (taken-by ICE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ICE_LID6) (Instrument ICE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ICE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.4.4 canopy density") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Multiband-2-9-channels) (Accuracy High) (Swath None)  (taken-by ICE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ICE_LID7) (Instrument ICE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ICE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.3.2 Sea ice cover") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Multiband-2-9-channels) (Accuracy High) (Swath None)  (taken-by ICE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ICE_LID8) (Instrument ICE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ICE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.1.3 glacier mass balance") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Multiband-2-9-channels) (Accuracy High) (Swath None)  (taken-by ICE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ICE_LID9) (Instrument ICE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ICE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.2.2 Hi-res topography") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Multiband-2-9-channels) (Accuracy Medium) (Swath None)  (taken-by ICE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ICE_LID10) (Instrument ICE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ICE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.4.3 vegetation height") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Multiband-2-9-channels) (Accuracy High) (Swath None)  (taken-by ICE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ICE_LID11) (Instrument ICE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ICE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.1.5 Ice Sheet topography") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Multiband-2-9-channels) (Accuracy High) (Swath None)  (taken-by ICE_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ICE_LID12) (Instrument ICE_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ICE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  ICE_LID0  ICE_LID1  ICE_LID2  ICE_LID3  ICE_LID4  ICE_LID5  ICE_LID6  ICE_LID7  ICE_LID8  ICE_LID9  ICE_LID10  ICE_LID11  ICE_LID12  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ICE_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  ICE_LID0  ICE_LID1  ICE_LID2  ICE_LID3  ICE_LID4  ICE_LID5  ICE_LID6  ICE_LID7  ICE_LID8  ICE_LID9  ICE_LID10  ICE_LID11  ICE_LID12 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ICE_LID-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ICE_LID-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; ASC_IRR CAPABILITY RULES ;;;

    (defrule MANIFEST::ASC_IRR-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&ASC_IRR) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::ASC_IRR-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::ASC_IRR-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&ASC_IRR) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_IRR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.3.1 Atmospheric humidity -indirect-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Spectral-resolution Low-10cm-1) (Spectral-sampling Multiband-2-9-channels) (Accuracy Medium) (Swath Medium-100km) (Radiometric-accuracy Medium)  (taken-by ASC_IRR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ASC_IRR0) (Instrument ASC_IRR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_IRR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.2.1 Atmospheric temperature fields") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Spectral-resolution Low-10cm-1) (Spectral-sampling Multiband-2-9-channels) (Accuracy Medium) (Swath Medium-100km) (Radiometric-accuracy Medium)  (taken-by ASC_IRR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ASC_IRR1) (Instrument ASC_IRR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_IRR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.5.4 cloud mask") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Spectral-resolution Low-10cm-1) (Spectral-sampling Multiband-2-9-channels) (Accuracy Medium) (Swath Medium-100km) (Radiometric-accuracy Medium)  (taken-by ASC_IRR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ASC_IRR2) (Instrument ASC_IRR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_IRR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  ASC_IRR0  ASC_IRR1  ASC_IRR2  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_IRR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  ASC_IRR0  ASC_IRR1  ASC_IRR2 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_IRR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_IRR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; LIST_LID CAPABILITY RULES ;;;

    (defrule MANIFEST::LIST_LID-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&LIST_LID) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::LIST_LID-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::LIST_LID-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&LIST_LID) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::LIST_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "2.4.1 vegetation type and structure") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Highest-1m-orless) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High)  (taken-by LIST_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id LIST_LID0) (Instrument LIST_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::LIST_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.1.2 Glacier surface elevation") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Highest-1m-orless) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High)  (taken-by LIST_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id LIST_LID1) (Instrument LIST_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::LIST_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.3.1 Sea ice thickness") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Highest-1m-orless) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High)  (taken-by LIST_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id LIST_LID2) (Instrument LIST_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::LIST_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.3.2 Sea ice cover") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Highest-1m-orless) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High)  (taken-by LIST_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id LIST_LID3) (Instrument LIST_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::LIST_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.1.1 ice sheet volume") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Highest-1m-orless) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High)  (taken-by LIST_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id LIST_LID4) (Instrument LIST_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::LIST_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.1.3 glacier mass balance") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Highest-1m-orless) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High)  (taken-by LIST_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id LIST_LID5) (Instrument LIST_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::LIST_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.7.2 flood monitoring") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Highest-1m-orless) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High)  (taken-by LIST_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id LIST_LID6) (Instrument LIST_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::LIST_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.2.2 Hi-res topography") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Highest-1m-orless) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High)  (taken-by LIST_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id LIST_LID7) (Instrument LIST_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::LIST_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.4.3 vegetation height") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Highest-1m-orless) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High)  (taken-by LIST_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id LIST_LID8) (Instrument LIST_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::LIST_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.1.5 Ice Sheet topography") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Highest-1m-orless) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High)  (taken-by LIST_LID) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id LIST_LID9) (Instrument LIST_LID) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::LIST_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  LIST_LID0  LIST_LID1  LIST_LID2  LIST_LID3  LIST_LID4  LIST_LID5  LIST_LID6  LIST_LID7  LIST_LID8  LIST_LID9  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::LIST_LID-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  LIST_LID0  LIST_LID1  LIST_LID2  LIST_LID3  LIST_LID4  LIST_LID5  LIST_LID6  LIST_LID7  LIST_LID8  LIST_LID9 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::LIST_LID-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::LIST_LID-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; SWOT_MWR CAPABILITY RULES ;;;

    (defrule MANIFEST::SWOT_MWR-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&SWOT_MWR) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::SWOT_MWR-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::SWOT_MWR-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&SWOT_MWR) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.3.1 Atmospheric humidity -indirect-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Penetration Medium-other-MW) (Swath Narrow-10km) (Radiometric-accuracy High) (rms-system-instrument# 1.0)  (taken-by SWOT_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_MWR0) (Instrument SWOT_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.3.2 Water vapor transport - Winds") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy Low) (Penetration Medium-other-MW) (Swath Narrow-10km) (Radiometric-accuracy Low) (rms-system-instrument# 1.0)  (taken-by SWOT_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_MWR1) (Instrument SWOT_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.3.4 Atmospheric pressure") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Penetration Medium-other-MW) (Swath Narrow-10km) (Radiometric-accuracy High) (rms-system-instrument# 1.0)  (taken-by SWOT_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_MWR2) (Instrument SWOT_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.2.1 Atmospheric temperature fields") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Penetration Medium-other-MW) (Swath Narrow-10km) (Radiometric-accuracy High) (rms-system-instrument# 1.0)  (taken-by SWOT_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_MWR3) (Instrument SWOT_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.1 H2O") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Penetration Medium-other-MW) (Swath Narrow-10km) (Radiometric-accuracy High) (rms-system-instrument# 1.0)  (taken-by SWOT_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SWOT_MWR4) (Instrument SWOT_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  SWOT_MWR0  SWOT_MWR1  SWOT_MWR2  SWOT_MWR3  SWOT_MWR4  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  SWOT_MWR0  SWOT_MWR1  SWOT_MWR2  SWOT_MWR3  SWOT_MWR4 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_MWR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SWOT_MWR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; ACE_CPR CAPABILITY RULES ;;;

    (defrule MANIFEST::ACE_CPR-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&ACE_CPR) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::ACE_CPR-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::ACE_CPR-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&ACE_CPR) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_CPR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.6.2 cloud ice particle size distribution") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Spectral-sampling Multiband-2-9-channels) (Accuracy Medium)  (taken-by ACE_CPR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_CPR0) (Instrument ACE_CPR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_CPR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.5.2 Cloud type") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Spectral-sampling Multiband-2-9-channels) (Accuracy Medium)  (taken-by ACE_CPR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_CPR1) (Instrument ACE_CPR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_CPR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.6.1 cloud height/optical thickness") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Spectral-sampling Multiband-2-9-channels) (Accuracy High)  (taken-by ACE_CPR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_CPR2) (Instrument ACE_CPR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_CPR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.5.3 Cloud amount/distribution -horizontal and vertical-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Spectral-sampling Multiband-2-9-channels) (Accuracy Medium)  (taken-by ACE_CPR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_CPR3) (Instrument ACE_CPR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_CPR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.7.2 Cloud droplet size") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Spectral-sampling Multiband-2-9-channels) (Accuracy High)  (taken-by ACE_CPR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_CPR4) (Instrument ACE_CPR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_CPR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.6.3 Cloud particle phase - ice/water transition") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Spectral-sampling Multiband-2-9-channels) (Accuracy Medium)  (taken-by ACE_CPR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_CPR5) (Instrument ACE_CPR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_CPR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.7.1 Cloud liquid water and precipitation rate") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Vertical-Spatial-Resolution Medium-200m-2km) (Spectral-sampling Multiband-2-9-channels) (Accuracy High)  (taken-by ACE_CPR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ACE_CPR6) (Instrument ACE_CPR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_CPR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  ACE_CPR0  ACE_CPR1  ACE_CPR2  ACE_CPR3  ACE_CPR4  ACE_CPR5  ACE_CPR6  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_CPR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  ACE_CPR0  ACE_CPR1  ACE_CPR2  ACE_CPR3  ACE_CPR4  ACE_CPR5  ACE_CPR6 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_CPR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ACE_CPR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; GEO_STEER CAPABILITY RULES ;;;

    (defrule MANIFEST::GEO_STEER-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GEO_STEER) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::GEO_STEER-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::GEO_STEER-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GEO_STEER) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.2 O3") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low) (cloud-cleared no)  (taken-by GEO_STEER) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_STEER0) (Instrument GEO_STEER) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.4 hydrocarbon reservoir monitoring") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by GEO_STEER) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_STEER1) (Instrument GEO_STEER) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.1.3 Extended ocean color - NIR -atmospheric correction-") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy Medium) (Swath Medium-100km) (Radiometric-accuracy Medium)  (taken-by GEO_STEER) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_STEER2) (Instrument GEO_STEER) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.2 landcover status") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by GEO_STEER) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_STEER3) (Instrument GEO_STEER) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.7 NOx-NO, NO2-, N2O5, HNO3") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low) (cloud-cleared no)  (taken-by GEO_STEER) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_STEER4) (Instrument GEO_STEER) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.8 CH2O and non-CH4 VOC") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low) (cloud-cleared no)  (taken-by GEO_STEER) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_STEER5) (Instrument GEO_STEER) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.7.2 flood monitoring") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy Medium) (Swath Medium-100km) (Radiometric-accuracy Medium) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by GEO_STEER) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_STEER6) (Instrument GEO_STEER) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.1 aerosol height/optical depth") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy Medium) (Swath Medium-100km) (Radiometric-accuracy Medium)  (taken-by GEO_STEER) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_STEER7) (Instrument GEO_STEER) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.5 aerosol size and size distribution") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by GEO_STEER) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_STEER8) (Instrument GEO_STEER) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.16 Visible atmospheric plumes") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by GEO_STEER) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_STEER9) (Instrument GEO_STEER) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.11 SO2") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low) (cloud-cleared no)  (taken-by GEO_STEER) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_STEER10) (Instrument GEO_STEER) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.1.1 Ocean color - 410-680nm -Chlorophyll absorption and fluorescence, pigments, phytoplankton, CDOM-") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy Medium) (Swath Medium-100km) (Radiometric-accuracy Medium)  (taken-by GEO_STEER) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_STEER11) (Instrument GEO_STEER) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.1.2 Extended ocean color - UV -enhanced DOC, CDOM-") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy Medium) (Swath Medium-100km) (Radiometric-accuracy Medium)  (taken-by GEO_STEER) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_STEER12) (Instrument GEO_STEER) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.2.5 river plumes/sediment fluxes") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by GEO_STEER) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_STEER13) (Instrument GEO_STEER) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.13 Black carbon and other polluting aerosols") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low) (cloud-cleared no)  (taken-by GEO_STEER) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_STEER14) (Instrument GEO_STEER) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.1 land use") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by GEO_STEER) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_STEER15) (Instrument GEO_STEER) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.3 disaster monitoring") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Medium-100m-1km) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High)  (taken-by GEO_STEER) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_STEER16) (Instrument GEO_STEER) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  GEO_STEER0  GEO_STEER1  GEO_STEER2  GEO_STEER3  GEO_STEER4  GEO_STEER5  GEO_STEER6  GEO_STEER7  GEO_STEER8  GEO_STEER9  GEO_STEER10  GEO_STEER11  GEO_STEER12  GEO_STEER13  GEO_STEER14  GEO_STEER15  GEO_STEER16  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  GEO_STEER0  GEO_STEER1  GEO_STEER2  GEO_STEER3  GEO_STEER4  GEO_STEER5  GEO_STEER6  GEO_STEER7  GEO_STEER8  GEO_STEER9  GEO_STEER10  GEO_STEER11  GEO_STEER12  GEO_STEER13  GEO_STEER14  GEO_STEER15  GEO_STEER16 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_STEER-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; XOV_RAD CAPABILITY RULES ;;;

    (defrule MANIFEST::XOV_RAD-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&XOV_RAD) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::XOV_RAD-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::XOV_RAD-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&XOV_RAD) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_RAD-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "3.4.1 Ocean surface wind speed") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Accuracy High) (Swath Wide-1000km) (rms-system-tropoH2O# High) (sensitivity-in-high-winds High) (sensitivity-in-rain High)  (taken-by XOV_RAD) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id XOV_RAD0) (Instrument XOV_RAD) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_RAD-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.3.2 soil moisture") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Accuracy Low) (Swath Wide-1000km) (rms-system-tropoH2O# High) (sensitivity-in-high-winds High) (sensitivity-in-rain High)  (taken-by XOV_RAD) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id XOV_RAD1) (Instrument XOV_RAD) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_RAD-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.6.1 Ocean wave height and spectrum") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Accuracy High) (Swath Wide-1000km) (rms-system-tropoH2O# High) (sensitivity-in-high-winds High) (sensitivity-in-rain High)  (taken-by XOV_RAD) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id XOV_RAD2) (Instrument XOV_RAD) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_RAD-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.4.2 Ocean surface wind direction") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Accuracy High) (Swath Wide-1000km) (rms-system-tropoH2O# High) (sensitivity-in-high-winds High) (sensitivity-in-rain High)  (taken-by XOV_RAD) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id XOV_RAD3) (Instrument XOV_RAD) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_RAD-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  XOV_RAD0  XOV_RAD1  XOV_RAD2  XOV_RAD3  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_RAD-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  XOV_RAD0  XOV_RAD1  XOV_RAD2  XOV_RAD3 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_RAD-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_RAD-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; GEO_WAIS CAPABILITY RULES ;;;

    (defrule MANIFEST::GEO_WAIS-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GEO_WAIS) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::GEO_WAIS-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::GEO_WAIS-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GEO_WAIS) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.2 O3") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy Medium) (cloud-cleared no)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS0) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.4 hydrocarbon reservoir monitoring") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy High)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS1) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.1.3 Extended ocean color - NIR -atmospheric correction-") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy High)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS2) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.2 landcover status") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy High)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS3) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.7 NOx-NO, NO2-, N2O5, HNO3") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy Medium) (cloud-cleared no)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS4) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.8 CH2O and non-CH4 VOC") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy Medium) (cloud-cleared no)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS5) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.7.2 flood monitoring") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy High)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS6) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.1 aerosol height/optical depth") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy Medium) (cloud-cleared no)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS7) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.5.4 cloud mask") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy High)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS8) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.1.5 aerosol size and size distribution") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy Medium) (cloud-cleared no)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS9) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.16 Visible atmospheric plumes") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy High)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS10) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.11 SO2") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy Medium) (cloud-cleared no)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS11) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.1.1 Ocean color - 410-680nm -Chlorophyll absorption and fluorescence, pigments, phytoplankton, CDOM-") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy High)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS12) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.1.2 Extended ocean color - UV -enhanced DOC, CDOM-") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy High)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS13) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "A2.Fire Monitoring") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy High)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS14) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.2.5 river plumes/sediment fluxes") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy High)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS15) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.13 Black carbon and other polluting aerosols") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy Medium) (cloud-cleared no)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS16) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.1 land use") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy High)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS17) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.3 disaster monitoring") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy High) (Swath Very-wide-2000km) (Radiometric-accuracy High)  (taken-by GEO_WAIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_WAIS18) (Instrument GEO_WAIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  GEO_WAIS0  GEO_WAIS1  GEO_WAIS2  GEO_WAIS3  GEO_WAIS4  GEO_WAIS5  GEO_WAIS6  GEO_WAIS7  GEO_WAIS8  GEO_WAIS9  GEO_WAIS10  GEO_WAIS11  GEO_WAIS12  GEO_WAIS13  GEO_WAIS14  GEO_WAIS15  GEO_WAIS16  GEO_WAIS17  GEO_WAIS18  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  GEO_WAIS0  GEO_WAIS1  GEO_WAIS2  GEO_WAIS3  GEO_WAIS4  GEO_WAIS5  GEO_WAIS6  GEO_WAIS7  GEO_WAIS8  GEO_WAIS9  GEO_WAIS10  GEO_WAIS11  GEO_WAIS12  GEO_WAIS13  GEO_WAIS14  GEO_WAIS15  GEO_WAIS16  GEO_WAIS17  GEO_WAIS18 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_WAIS-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; SMAP_MWR CAPABILITY RULES ;;;

    (defrule MANIFEST::SMAP_MWR-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&SMAP_MWR) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::SMAP_MWR-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::SMAP_MWR-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&SMAP_MWR) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "3.4.1 Ocean surface wind speed") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Low) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Low) (Accuracy# 2.5)  (taken-by SMAP_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SMAP_MWR0) (Instrument SMAP_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.3.2 Sea ice cover") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Low)  (taken-by SMAP_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SMAP_MWR1) (Instrument SMAP_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.3.2 soil moisture") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High) (Accuracy# 0.04) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High) (Accuracy# 0.04)  (taken-by SMAP_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SMAP_MWR2) (Instrument SMAP_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.3.1 Ocean salinity") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Medium) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Medium) (Accuracy# 0.6)  (taken-by SMAP_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SMAP_MWR3) (Instrument SMAP_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.4 snow cover") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Low)  (taken-by SMAP_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SMAP_MWR4) (Instrument SMAP_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.4.2 Ocean surface wind direction") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Low) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Low) (Accuracy# 10.0)  (taken-by SMAP_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SMAP_MWR5) (Instrument SMAP_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  SMAP_MWR0  SMAP_MWR1  SMAP_MWR2  SMAP_MWR3  SMAP_MWR4  SMAP_MWR5  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  SMAP_MWR0  SMAP_MWR1  SMAP_MWR2  SMAP_MWR3  SMAP_MWR4  SMAP_MWR5 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_MWR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_MWR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; XOV_MWR CAPABILITY RULES ;;;

    (defrule MANIFEST::XOV_MWR-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&XOV_MWR) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::XOV_MWR-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::XOV_MWR-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&XOV_MWR) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "3.4.1 Ocean surface wind speed") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Accuracy Medium) (Swath Wide-1000km) (rms-system-tropoH2O# Low) (sensitivity-in-high-winds Low) (sensitivity-in-rain High)  (taken-by XOV_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id XOV_MWR0) (Instrument XOV_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.3.1 Atmospheric humidity -indirect-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Accuracy High) (Swath Wide-1000km) (rms-system-tropoH2O# Low) (sensitivity-in-high-winds Low) (sensitivity-in-rain High)  (taken-by XOV_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id XOV_MWR1) (Instrument XOV_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.4.2 Ocean surface wind direction") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Accuracy Low) (Swath Wide-1000km) (rms-system-tropoH2O# Low) (sensitivity-in-high-winds Low) (sensitivity-in-rain High)  (taken-by XOV_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id XOV_MWR2) (Instrument XOV_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.2.1 Atmospheric temperature fields") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Accuracy High) (Swath Wide-1000km) (rms-system-tropoH2O# Low) (sensitivity-in-high-winds Low) (sensitivity-in-rain High)  (taken-by XOV_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id XOV_MWR3) (Instrument XOV_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.7.1 Cloud liquid water and precipitation rate") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Accuracy Low) (Swath Wide-1000km) (rms-system-tropoH2O# Low) (sensitivity-in-high-winds Low) (sensitivity-in-rain High)  (taken-by XOV_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id XOV_MWR4) (Instrument XOV_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.1 H2O") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Accuracy High) (Swath Wide-1000km) (rms-system-tropoH2O# Low) (sensitivity-in-high-winds Low) (sensitivity-in-rain High)  (taken-by XOV_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id XOV_MWR5) (Instrument XOV_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  XOV_MWR0  XOV_MWR1  XOV_MWR2  XOV_MWR3  XOV_MWR4  XOV_MWR5  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  XOV_MWR0  XOV_MWR1  XOV_MWR2  XOV_MWR3  XOV_MWR4  XOV_MWR5 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_MWR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::XOV_MWR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; CLOUD_MASK CAPABILITY RULES ;;;

    (defrule MANIFEST::CLOUD_MASK-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&CLOUD_MASK) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::CLOUD_MASK-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::CLOUD_MASK-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&CLOUD_MASK) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLOUD_MASK-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.5.2 Cloud type") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by CLOUD_MASK) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id CLOUD_MASK0) (Instrument CLOUD_MASK) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLOUD_MASK-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.5.4 cloud mask") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by CLOUD_MASK) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id CLOUD_MASK1) (Instrument CLOUD_MASK) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLOUD_MASK-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  CLOUD_MASK0  CLOUD_MASK1  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLOUD_MASK-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  CLOUD_MASK0  CLOUD_MASK1 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLOUD_MASK-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLOUD_MASK-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; GEO_GCR CAPABILITY RULES ;;;

    (defrule MANIFEST::GEO_GCR-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GEO_GCR) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::GEO_GCR-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::GEO_GCR-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&GEO_GCR) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_GCR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.5 CO") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Accuracy High) (Swath Wide-1000km) (Radiometric-accuracy High) (cloud-cleared no) (Vertical-Spatial-Resolution Medium-200m-2km)  (taken-by GEO_GCR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_GCR0) (Instrument GEO_GCR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_GCR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.4 CH4") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Accuracy High) (Swath Wide-1000km) (Radiometric-accuracy High) (cloud-cleared no)  (taken-by GEO_GCR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id GEO_GCR1) (Instrument GEO_GCR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_GCR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  GEO_GCR0  GEO_GCR1  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_GCR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  GEO_GCR0  GEO_GCR1 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_GCR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::GEO_GCR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; HYSP_TIR CAPABILITY RULES ;;;

    (defrule MANIFEST::HYSP_TIR-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&HYSP_TIR) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::HYSP_TIR-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::HYSP_TIR-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&HYSP_TIR) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.5.2 Cloud type") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR0) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.4.2 vegetation state") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR1) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.4 hydrocarbon reservoir monitoring") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR2) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.2 landcover status") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR3) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.1.1 Albedo and reflectance") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR4) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.6 volcano monitoring") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR5) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.1 H2O") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR6) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.5.1 Cloud top temperature") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR7) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.4.1 vegetation type and structure") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR8) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.5.1 Surface temperature -land-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR9) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.7.2 coral reef health/extent") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR10) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "A2.Fire Monitoring") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR11) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.3.2 Sea ice cover") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR12) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.3.2 soil moisture") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Low)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR13) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.1 land use") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR14) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.5 surface composition") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR15) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.5.1 Surface temperature -ocean-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR16) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.4 snow cover") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR17) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.3 disaster monitoring") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_TIR18) (Instrument HYSP_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  HYSP_TIR0  HYSP_TIR1  HYSP_TIR2  HYSP_TIR3  HYSP_TIR4  HYSP_TIR5  HYSP_TIR6  HYSP_TIR7  HYSP_TIR8  HYSP_TIR9  HYSP_TIR10  HYSP_TIR11  HYSP_TIR12  HYSP_TIR13  HYSP_TIR14  HYSP_TIR15  HYSP_TIR16  HYSP_TIR17  HYSP_TIR18  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  HYSP_TIR0  HYSP_TIR1  HYSP_TIR2  HYSP_TIR3  HYSP_TIR4  HYSP_TIR5  HYSP_TIR6  HYSP_TIR7  HYSP_TIR8  HYSP_TIR9  HYSP_TIR10  HYSP_TIR11  HYSP_TIR12  HYSP_TIR13  HYSP_TIR14  HYSP_TIR15  HYSP_TIR16  HYSP_TIR17  HYSP_TIR18 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_TIR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; HYSP_VIS CAPABILITY RULES ;;;

    (defrule MANIFEST::HYSP_VIS-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&HYSP_VIS) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::HYSP_VIS-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::HYSP_VIS-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&HYSP_VIS) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "2.4.2 vegetation state") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_VIS0) (Instrument HYSP_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.4 hydrocarbon reservoir monitoring") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_VIS1) (Instrument HYSP_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.2 landcover status") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_VIS2) (Instrument HYSP_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.1.1 Albedo and reflectance") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_VIS3) (Instrument HYSP_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.6 volcano monitoring") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_VIS4) (Instrument HYSP_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.4.1 vegetation type and structure") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_VIS5) (Instrument HYSP_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.7.2 coral reef health/extent") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_VIS6) (Instrument HYSP_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "A2.Fire Monitoring") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_VIS7) (Instrument HYSP_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.3.2 Sea ice cover") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_VIS8) (Instrument HYSP_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.3.2 soil moisture") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Low)  (taken-by HYSP_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_VIS9) (Instrument HYSP_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.1 land use") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_VIS10) (Instrument HYSP_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.5 surface composition") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_VIS11) (Instrument HYSP_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.4 snow cover") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_VIS12) (Instrument HYSP_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.3 disaster monitoring") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by HYSP_VIS) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id HYSP_VIS13) (Instrument HYSP_VIS) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  HYSP_VIS0  HYSP_VIS1  HYSP_VIS2  HYSP_VIS3  HYSP_VIS4  HYSP_VIS5  HYSP_VIS6  HYSP_VIS7  HYSP_VIS8  HYSP_VIS9  HYSP_VIS10  HYSP_VIS11  HYSP_VIS12  HYSP_VIS13  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  HYSP_VIS0  HYSP_VIS1  HYSP_VIS2  HYSP_VIS3  HYSP_VIS4  HYSP_VIS5  HYSP_VIS6  HYSP_VIS7  HYSP_VIS8  HYSP_VIS9  HYSP_VIS10  HYSP_VIS11  HYSP_VIS12  HYSP_VIS13 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::HYSP_VIS-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; SCLP_MWR CAPABILITY RULES ;;;

    (defrule MANIFEST::SCLP_MWR-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&SCLP_MWR) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::SCLP_MWR-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::SCLP_MWR-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&SCLP_MWR) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "3.4.1 Ocean surface wind speed") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by SCLP_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_MWR0) (Instrument SCLP_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.4.1 vegetation type and structure") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by SCLP_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_MWR1) (Instrument SCLP_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.1 snow-water equivalence") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy Medium) (Swath Medium-100km) (Radiometric-accuracy Medium)  (taken-by SCLP_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_MWR2) (Instrument SCLP_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.3 snow wetness") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy Medium) (Swath Medium-100km) (Radiometric-accuracy Medium)  (taken-by SCLP_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_MWR3) (Instrument SCLP_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.2 snow depth") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy Medium) (Swath Medium-100km) (Radiometric-accuracy Medium)  (taken-by SCLP_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_MWR4) (Instrument SCLP_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.3.2 soil moisture") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by SCLP_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_MWR5) (Instrument SCLP_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.6.1 Ocean wave height and spectrum") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by SCLP_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_MWR6) (Instrument SCLP_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.4 snow cover") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy Medium) (Swath Medium-100km) (Radiometric-accuracy Medium)  (taken-by SCLP_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_MWR7) (Instrument SCLP_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.4.2 Ocean surface wind direction") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Accuracy Low) (Swath Medium-100km) (Radiometric-accuracy Low)  (taken-by SCLP_MWR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SCLP_MWR8) (Instrument SCLP_MWR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  SCLP_MWR0  SCLP_MWR1  SCLP_MWR2  SCLP_MWR3  SCLP_MWR4  SCLP_MWR5  SCLP_MWR6  SCLP_MWR7  SCLP_MWR8  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_MWR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  SCLP_MWR0  SCLP_MWR1  SCLP_MWR2  SCLP_MWR3  SCLP_MWR4  SCLP_MWR5  SCLP_MWR6  SCLP_MWR7  SCLP_MWR8 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_MWR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SCLP_MWR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; ASC_GCR CAPABILITY RULES ;;;

    (defrule MANIFEST::ASC_GCR-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&ASC_GCR) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::ASC_GCR-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::ASC_GCR-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&ASC_GCR) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_GCR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.5 CO") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution High-10-100m) (Spectral-resolution Medium-1cm-1) (Spectral-sampling Multiband-2-9-channels) (Accuracy High) (Swath Medium-100km) (Radiometric-accuracy High) (cloud-cleared no)  (taken-by ASC_GCR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id ASC_GCR0) (Instrument ASC_GCR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_GCR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  ASC_GCR0  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_GCR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  ASC_GCR0 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_GCR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::ASC_GCR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; CLAR_TIR CAPABILITY RULES ;;;

    (defrule MANIFEST::CLAR_TIR-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&CLAR_TIR) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::CLAR_TIR-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::CLAR_TIR-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&CLAR_TIR) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLAR_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.9.2 Spectrally resolved IR radiance -200-2000cm-1-") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy High) (On-board-calibration High) (Radiometric-accuracy High) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Very-low-10-100km) (Spectral-resolution High-0.1cm-1) (Spectral-sampling Hyperspectral-100-channels-or-more) (Accuracy High) (On-board-calibration High) (Radiometric-accuracy High)  (taken-by CLAR_TIR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id CLAR_TIR0) (Instrument CLAR_TIR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLAR_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  CLAR_TIR0  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLAR_TIR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  CLAR_TIR0 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLAR_TIR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::CLAR_TIR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; DESD_SAR CAPABILITY RULES ;;;

    (defrule MANIFEST::DESD_SAR-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&DESD_SAR) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::DESD_SAR-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::DESD_SAR-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&DESD_SAR) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "4.1.4 Ice sheet velocity") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by DESD_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_SAR0) (Instrument DESD_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.3.1 Sea ice thickness") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Medium)  (taken-by DESD_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_SAR1) (Instrument DESD_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.1.2 Glacier surface elevation") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Medium)  (taken-by DESD_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_SAR2) (Instrument DESD_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.4 hydrocarbon reservoir monitoring") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by DESD_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_SAR3) (Instrument DESD_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.2 landcover status") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by DESD_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_SAR4) (Instrument DESD_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.1.1 ice sheet volume") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Medium)  (taken-by DESD_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_SAR5) (Instrument DESD_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.4.1 vegetation type and structure") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by DESD_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_SAR6) (Instrument DESD_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.4.4 canopy density") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by DESD_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_SAR7) (Instrument DESD_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.3.2 Sea ice cover") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Medium)  (taken-by DESD_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_SAR8) (Instrument DESD_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.2.1 surface deformation") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by DESD_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_SAR9) (Instrument DESD_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.3.2 soil moisture") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Medium)  (taken-by DESD_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_SAR10) (Instrument DESD_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.1 land use") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by DESD_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_SAR11) (Instrument DESD_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.4 snow cover") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Medium)  (taken-by DESD_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_SAR12) (Instrument DESD_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.2.2 Hi-res topography") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Medium)  (taken-by DESD_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_SAR13) (Instrument DESD_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.6.3 disaster monitoring") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by DESD_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_SAR14) (Instrument DESD_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.1.5 Ice Sheet topography") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Medium)  (taken-by DESD_SAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id DESD_SAR15) (Instrument DESD_SAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  DESD_SAR0  DESD_SAR1  DESD_SAR2  DESD_SAR3  DESD_SAR4  DESD_SAR5  DESD_SAR6  DESD_SAR7  DESD_SAR8  DESD_SAR9  DESD_SAR10  DESD_SAR11  DESD_SAR12  DESD_SAR13  DESD_SAR14  DESD_SAR15  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  DESD_SAR0  DESD_SAR1  DESD_SAR2  DESD_SAR3  DESD_SAR4  DESD_SAR5  DESD_SAR6  DESD_SAR7  DESD_SAR8  DESD_SAR9  DESD_SAR10  DESD_SAR11  DESD_SAR12  DESD_SAR13  DESD_SAR14  DESD_SAR15 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::DESD_SAR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; PATH_GEOSTAR CAPABILITY RULES ;;;

    (defrule MANIFEST::PATH_GEOSTAR-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&PATH_GEOSTAR) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::PATH_GEOSTAR-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::PATH_GEOSTAR-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&PATH_GEOSTAR) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::PATH_GEOSTAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "1.5.2 Cloud type") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy Medium) (Swath Wide-1000km) (Radiometric-accuracy Medium) (cloud-cleared yes)  (taken-by PATH_GEOSTAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id PATH_GEOSTAR0) (Instrument PATH_GEOSTAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::PATH_GEOSTAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.4.1 atmospheric wind speed") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy Low) (Swath Wide-1000km) (Radiometric-accuracy Low) (cloud-cleared yes)  (taken-by PATH_GEOSTAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id PATH_GEOSTAR1) (Instrument PATH_GEOSTAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::PATH_GEOSTAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.3.1 Atmospheric humidity -indirect-") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Swath Wide-1000km) (Radiometric-accuracy High) (cloud-cleared yes)  (taken-by PATH_GEOSTAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id PATH_GEOSTAR2) (Instrument PATH_GEOSTAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::PATH_GEOSTAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.3.2 Water vapor transport - Winds") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy Low) (Swath Wide-1000km) (Radiometric-accuracy Low) (cloud-cleared yes) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy Medium) (Swath Wide-1000km) (Radiometric-accuracy Medium) (cloud-cleared yes)  (taken-by PATH_GEOSTAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id PATH_GEOSTAR3) (Instrument PATH_GEOSTAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::PATH_GEOSTAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.6 O2") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Swath Wide-1000km) (Radiometric-accuracy High) (cloud-cleared yes)  (taken-by PATH_GEOSTAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id PATH_GEOSTAR4) (Instrument PATH_GEOSTAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::PATH_GEOSTAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "3.5.1 Surface temperature -ocean-") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy Medium) (Swath Wide-1000km) (Radiometric-accuracy Medium) (cloud-cleared yes)  (taken-by PATH_GEOSTAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id PATH_GEOSTAR5) (Instrument PATH_GEOSTAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::PATH_GEOSTAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.2.1 Atmospheric temperature fields") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Swath Wide-1000km) (Radiometric-accuracy High) (cloud-cleared yes)  (taken-by PATH_GEOSTAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id PATH_GEOSTAR6) (Instrument PATH_GEOSTAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::PATH_GEOSTAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.7.1 Cloud liquid water and precipitation rate") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy Low) (Swath Wide-1000km) (Radiometric-accuracy Low) (cloud-cleared yes)  (taken-by PATH_GEOSTAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id PATH_GEOSTAR7) (Instrument PATH_GEOSTAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::PATH_GEOSTAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "1.8.1 H2O") (science-multiplier ?mult) (Region-of-interest US) (Coverage-of-region-of-interest Global) (Horizontal-Spatial-Resolution Low-1km-10km) (Vertical-Spatial-Resolution High-200m-orless) (Accuracy High) (Swath Wide-1000km) (Radiometric-accuracy High) (cloud-cleared yes)  (taken-by PATH_GEOSTAR) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id PATH_GEOSTAR8) (Instrument PATH_GEOSTAR) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::PATH_GEOSTAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  PATH_GEOSTAR0  PATH_GEOSTAR1  PATH_GEOSTAR2  PATH_GEOSTAR3  PATH_GEOSTAR4  PATH_GEOSTAR5  PATH_GEOSTAR6  PATH_GEOSTAR7  PATH_GEOSTAR8  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::PATH_GEOSTAR-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  PATH_GEOSTAR0  PATH_GEOSTAR1  PATH_GEOSTAR2  PATH_GEOSTAR3  PATH_GEOSTAR4  PATH_GEOSTAR5  PATH_GEOSTAR6  PATH_GEOSTAR7  PATH_GEOSTAR8 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::PATH_GEOSTAR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::PATH_GEOSTAR-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )


    ;;; SMAP_RAD CAPABILITY RULES ;;;

    (defrule MANIFEST::SMAP_RAD-init-can-measure
        (declare (salience -20))
        ?this <- (CAPABILITIES::Manifested-instrument  (Name ?ins&SMAP_RAD) (Id ?id) (flies-in ?miss) (Intent ?int) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh))
        (not (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?miss) (can-take-measurements no))) ; CONDITION ;
        =>
        (assert (CAPABILITIES::can-measure (in-mission ?miss) (instrument ?ins) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (data-rate-duty-cycle# nil) (power-duty-cycle# nil)(orbit-RAAN ?raan) (in-orbit (eval (str-cat ?typ "-" ?h "-" ?inc "-" ?raan))) (can-take-measurements yes) (reason "by default") (copied-to-measurement-fact no)(factHistory (str-cat "{R" (?*rulesMap* get MANIFEST::SMAP_RAD-init-can-measure) " A" (call ?this getFactId) "}"))))
    )


    (defrule CAPABILITIES-GENERATE::SMAP_RAD-measurements
        ?this  <- (CAPABILITIES::Manifested-instrument  (Name ?ins&SMAP_RAD) (Id ?id) (flies-in ?miss) (Intent ?int) (orbit-string ?orb) (Spectral-region ?sr) (orbit-type ?typ) (orbit-altitude# ?h) (orbit-inclination ?inc) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Illumination ?il) (factHistory ?fh1)
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        )
        ?this2 <- (CAPABILITIES::can-measure (instrument ?ins) (in-orbit ?orb) (can-take-measurements yes) (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (copied-to-measurement-fact no)(factHistory ?fh2))
        =>
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?*science-multiplier* (min ?dc-d ?dc-p)) else (bind ?*science-multiplier* 1.0))
        (if (and (numberp ?dc-d) (numberp ?dc-p)) then (bind ?mult (min ?dc-d ?dc-p)) else (bind ?mult 1.0))
        ;(bind ?*science-multiplier* 1.0) (bind ?mult 1.0)
        (printout t "--> SCIENCE MULTIPLIER: " ?*science-multiplier* crlf)
        (assert (CAPABILITIES::resource-limitations (data-rate-duty-cycle# ?dc-d) (power-duty-cycle# ?dc-p) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_RAD-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (assert (REQUIREMENTS::Measurement (Parameter "2.3.1 Freeze/thaw state") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High) (Accuracy# 0.09) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High) (Accuracy# 0.79)  (taken-by SMAP_RAD) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SMAP_RAD0) (Instrument SMAP_RAD) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_RAD-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.3.2 soil moisture") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Medium) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Medium) (Accuracy# 0.09)  (taken-by SMAP_RAD) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SMAP_RAD1) (Instrument SMAP_RAD) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_RAD-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "4.2.4 snow cover") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Low) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy Low)  (taken-by SMAP_RAD) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SMAP_RAD2) (Instrument SMAP_RAD) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_RAD-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (REQUIREMENTS::Measurement (Parameter "2.7.2 flood monitoring") (science-multiplier ?mult) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High) (Region-of-interest Global) (Coverage-of-region-of-interest Global) (Accuracy High)  (taken-by SMAP_RAD) (flies-in ?miss) (orbit-altitude# ?h) (orbit-RAAN ?raan) (orbit-anomaly# ?ano) (Id SMAP_RAD3) (Instrument SMAP_RAD) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_RAD-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))
            (avg-revisit-time-cold-regions# ?rcold)
            (avg-revisit-time-global# ?rglobal)
            (avg-revisit-time-northern-hemisphere# ?rnh)
            (avg-revisit-time-southern-hemisphere# ?rsh)
            (avg-revisit-time-tropics# ?rtropics)
            (avg-revisit-time-US# ?rus)
        ))
        (assert (SYNERGIES::cross-registered (measurements  SMAP_RAD0  SMAP_RAD1  SMAP_RAD2  SMAP_RAD3  ) (degree-of-cross-registration instrument) (platform ?id  ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_RAD-measurements) " A" (call ?this getFactId) " A" (call ?this2 getFactId) "}"))))
        (modify ?this (measurement-ids  SMAP_RAD0  SMAP_RAD1  SMAP_RAD2  SMAP_RAD3 ) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_RAD-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
        (modify ?this2 (copied-to-measurement-fact yes) (factHistory (str-cat "{R" (?*rulesMap* get CAPABILITIES::SMAP_RAD-measurements) " " ?fh1 " S" (call ?this2 getFactId) "}")))
    )

